核心：	1: jQuery()/$()   (.css .hide .show)  $(document.body).css( "background", "black" );
	2:$("<div><p>Hello</p></div>").appendTo("body"); $("<div>", {
  		"class": "test",
  		text: "Click me!",
  		click: function(){
   		 $(this).toggleClass("test");
 		 }
	}).appendTo("body");
	3:$(document).ready()=$(function(){
  		// 文档就绪
	})	
	4:each(callback)	对于每个匹配的元素所要执行的函数			$("img").each(function(i){
  		 this.src = "test" + i + ".jpg";
 	});	$(this) 
	5:size()   length;
	6:selector		context
	7:get(index)    返回的是DOM对象     eq(index)返回的是jQuery对象。
	8:index	搜索匹配的元素，并返回相应元素的索引值，从0开始计数。
	9:data()  在元素上存放或读取数据,返回jQuery对象 如key   removeData
	10:queue  dequeue   clearQueue(清空对象上尚未执行的所有队列,如果不带参数，则默认清空的是动画队列。这跟 stop(true)类似，但stop(true)只能清空动画队列，而这个可以清空所有通过 .queue() 创建的队列。)	函数队列的执行与移除
	11:jQuery.fn.extend({})	扩展 jQuery 元素集来提供新的方法（通常用来制作插件）。
	12:jQuery.extend(object)	扩展jQuery对象本身。
	13：jQuery.noConflict([extreme])


AJAX:



选择器 
	$("#xxx")  $(".xxx") $("xxx") $("*")  $("div,span,p.myClass")  $("form input")  $("form > input")  $("label + input")  $("form ~ input")  $('li:first'); $("input:not(:checked)")  $("tr:even")  $("tr:odd")  $("tr:eq(1)")  $("tr:gt(0)") $('li:last')   $("select option:selected")  $("input[name='newsletter']").attr("checked", true);  $("div:has(p)").addClass("test");

属性	设置时可以为方法
	1:attr      $("img").attr("src","test.jpg");	$("img").attr("title", function() { return this.src });
	2:removeAttr 	$("img").removeAttr("src");
	3:prop	$("input[type='checkbox']").prop("checked");	$("input[type='checkbox']").prop("checked", true);
	4：removeProp	用来删除由.prop()方法设置的属性集
	5:addClasss	$('ul li:last').addClass(function() {
  return 'item-' + $(this).index();
});	6:removeClass 	$("p").removeClass("selected");
	7:toggleClass	如果存在（不存在）就删除（添加）一个类。
	8:html	返回或设置被选元素的内容 (inner HTML)，包括标签。 	设置/获取内容	$("p").html("Hello <b>world</b>!");
	9：text	文本内容		$("p").text(function(n){
    return "这个 p 元素的 index 是：" + n;
    });
	10:val	返回或设置被选元素的值。元素的值是通过 value 属性设置的。该方法大多用于 input 元素。		$("input").val("hello world!");	


CSS:
	1:css()或animate()	$("p").css("color","red");
	2:offset()    	获取匹配元素在当前视口的相对偏移。top,left
	position 		获取匹配元素相对父元素的偏移。
	scrollTop  scrollLeft	获取匹配元素相对滚动条顶部的偏移。设定垂直滚动条值
 	height  width	用来获取 window 和 document 的高
 	innerHeight  innerWidth	获取第一个匹配元素内部区域高度
   	outerHeight  outerWidth 

文本：	
	1：append(content|fn)	向每个匹配的元素内部追加内容
	2：appendTo(content)
	3：prepend(content)	向每个匹配的元素内部前置内容。
	4:prependTo(content)
	5:after(content|fn)
	6:before(content|fn)	在每个匹配的元素之前插入内容。
	7:insertAfter(content)	把所有匹配的元素插入到另一个、指定的元素元素集合的后面。
	8:insertBefore(content)
	9:wrap(html|element|fn)	把所有匹配的元素用其他元素的结构化标记包裹起来。
	10:unwrap()
	11:replaceWith(content|fn)	replaceWith(content|fn)
	12:replaceAll(selector)	用匹配的元素替换掉所有 selector匹配到的元素。
	13:empty()	删除匹配的元素集合中所有的子节点
	14:remove([expr])	从DOM中删除所有匹配的元素。(这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。但除了这个元素本身得以保留之外，其他的比如绑定的事件，附加的数据等都会被移除)

	15:detach([expr])	从DOM中删除所有匹配的元素。(这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来)
	16:clone([Even[,deepEven]])	克隆匹配的DOM元素并且选中这些克隆的副本。

筛选：0 -1   
	1:eq()第N个jQuery对象    get(index)返回的是DOM对象
	2:first()   last()    
	3:hasClass() 		is("." + class)。
	4:filter(expr|obj|ele|fn)
	5:map
	6:has
	7:not	$("p").not( $("#selected")[0] )	从p元素中删除带有 select 的ID的元素
	8:slice(start, [end])
	9:children([expr])	取得一个包含匹配的元素集合中每一个元素的所有子元素的元素集合。
	10:find(expr|obj|ele)
	11:next nextAll    prev([expr])	prevAll([expr])
	12:parent([expr])	parents([expr])
	13:siblings([expr])	取得一个包含匹配的元素集合中每一个元素的所有唯一同辈元素的元素集合。可以用可选的表达式进行筛选。

方法：
	ready()  on() off()    bind() delegate() live()  one()	  trigger(type,[data])
hover([over,]out)  change  click() focus([[data],fn]) mousedown([[data],fn]) mouseup mouseenter([[data],fn]) mouseleave  mousemove mouseover mouseout   resize([[data],fn]) scroll([[data],fn])  select([[data],fn]) submit([[data],fn])

效果：
	